cmake_minimum_required(VERSION 3.0.0)
project(algorithm VERSION 0.1.0)

include(CTest)
enable_testing()
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_BUILD_TYPE "Debug")
include_directories("include")

#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/Bin)
add_library(binary_tree_library  STATIC src/binary_tree_impl.cpp)
target_include_directories(binary_tree_library 
    PUBLIC
    ${PROJECT_SOURCE_DIR}/include    
)

set(CMAKE_CXX_STANDARD 11)
add_executable(grammer_test grammer_test.cpp)
add_executable(2d_find 001_2d_find.cpp)
add_executable(stringreplace stringreplace.cpp)
add_executable(link_node link_node.cpp)
add_executable(shared shared_ptr_test.cpp)
add_executable(introsort introsort.cpp)
add_executable(fibonacci fibonacci.cpp)
add_executable(binary_tree_exe binary_tree.cpp)
add_executable(pow pow.cpp)
add_executable(print1toN print1_to_n.cpp)
add_executable(odd_1st odd_1st_even_2nd.cpp)
add_executable(last_k last_k_th.cpp)
add_executable(31valid_stack_sequence valid_stack_sequence.cpp)
add_executable(33valid_posorder_sequence 33_valid_posorder_sequence.cpp)
add_executable(34path-sum-ii 34path-sum-ii.cpp)
add_executable(numWays numWays.cpp)
add_executable(maximum-subarray maximum-subarray.cpp)
add_executable(unzipString unzipString.cpp)
add_executable(thread_test thread_test.cpp)
add_executable(uglynumber uglynumber.cpp)
add_executable(FirtNotRepeatingChar FirtNotRepeatingChar.cpp)
add_executable(find-first-and-last-position-of-element-in-sorted-array find-first-and-last-position-of-element-in-sorted-array.cpp)
add_executable(0ton-1 0ton-1.cpp)
add_executable(sum_of_two_num_to_s sum_of_two_num_to_s.cpp)
add_executable(reverse-words-in-a-string reverse-words-in-a-string.cpp)
add_executable(knapsack_problem_0-1_problem knapsack_problem_0-1_problem.cpp)
add_executable(coinChange coinChange.cpp)
add_executable(coinChange_better coinChange_better.cpp)
target_link_libraries(binary_tree_exe
        PRIVATE
        binary_tree_library
        )

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
string(REPLACE "-O2" "-O0" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
string(REPLACE "-O2" "-O0" CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}")
